package bean;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class user_infoBeanExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table user_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table user_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table user_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    public user_infoBeanExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table user_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    protected user_infoBeanExample(user_infoBeanExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table user_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table user_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table user_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table user_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table user_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table user_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table user_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table user_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("Id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("Id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("Id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("Id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("Id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("Id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("Id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("Id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("Id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("Id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("Id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("Id not between", value1, value2, "id");
            return this;
        }

        public Criteria andUseracctIsNull() {
            addCriterion("userAcct is null");
            return this;
        }

        public Criteria andUseracctIsNotNull() {
            addCriterion("userAcct is not null");
            return this;
        }

        public Criteria andUseracctEqualTo(String value) {
            addCriterion("userAcct =", value, "useracct");
            return this;
        }

        public Criteria andUseracctNotEqualTo(String value) {
            addCriterion("userAcct <>", value, "useracct");
            return this;
        }

        public Criteria andUseracctGreaterThan(String value) {
            addCriterion("userAcct >", value, "useracct");
            return this;
        }

        public Criteria andUseracctGreaterThanOrEqualTo(String value) {
            addCriterion("userAcct >=", value, "useracct");
            return this;
        }

        public Criteria andUseracctLessThan(String value) {
            addCriterion("userAcct <", value, "useracct");
            return this;
        }

        public Criteria andUseracctLessThanOrEqualTo(String value) {
            addCriterion("userAcct <=", value, "useracct");
            return this;
        }

        public Criteria andUseracctLike(String value) {
            addCriterion("userAcct like", value, "useracct");
            return this;
        }

        public Criteria andUseracctNotLike(String value) {
            addCriterion("userAcct not like", value, "useracct");
            return this;
        }

        public Criteria andUseracctIn(List<String> values) {
            addCriterion("userAcct in", values, "useracct");
            return this;
        }

        public Criteria andUseracctNotIn(List<String> values) {
            addCriterion("userAcct not in", values, "useracct");
            return this;
        }

        public Criteria andUseracctBetween(String value1, String value2) {
            addCriterion("userAcct between", value1, value2, "useracct");
            return this;
        }

        public Criteria andUseracctNotBetween(String value1, String value2) {
            addCriterion("userAcct not between", value1, value2, "useracct");
            return this;
        }

        public Criteria andUserpassIsNull() {
            addCriterion("userPass is null");
            return this;
        }

        public Criteria andUserpassIsNotNull() {
            addCriterion("userPass is not null");
            return this;
        }

        public Criteria andUserpassEqualTo(String value) {
            addCriterion("userPass =", value, "userpass");
            return this;
        }

        public Criteria andUserpassNotEqualTo(String value) {
            addCriterion("userPass <>", value, "userpass");
            return this;
        }

        public Criteria andUserpassGreaterThan(String value) {
            addCriterion("userPass >", value, "userpass");
            return this;
        }

        public Criteria andUserpassGreaterThanOrEqualTo(String value) {
            addCriterion("userPass >=", value, "userpass");
            return this;
        }

        public Criteria andUserpassLessThan(String value) {
            addCriterion("userPass <", value, "userpass");
            return this;
        }

        public Criteria andUserpassLessThanOrEqualTo(String value) {
            addCriterion("userPass <=", value, "userpass");
            return this;
        }

        public Criteria andUserpassLike(String value) {
            addCriterion("userPass like", value, "userpass");
            return this;
        }

        public Criteria andUserpassNotLike(String value) {
            addCriterion("userPass not like", value, "userpass");
            return this;
        }

        public Criteria andUserpassIn(List<String> values) {
            addCriterion("userPass in", values, "userpass");
            return this;
        }

        public Criteria andUserpassNotIn(List<String> values) {
            addCriterion("userPass not in", values, "userpass");
            return this;
        }

        public Criteria andUserpassBetween(String value1, String value2) {
            addCriterion("userPass between", value1, value2, "userpass");
            return this;
        }

        public Criteria andUserpassNotBetween(String value1, String value2) {
            addCriterion("userPass not between", value1, value2, "userpass");
            return this;
        }

        public Criteria andDeleteflagIsNull() {
            addCriterion("deleteFlag is null");
            return this;
        }

        public Criteria andDeleteflagIsNotNull() {
            addCriterion("deleteFlag is not null");
            return this;
        }

        public Criteria andDeleteflagEqualTo(Integer value) {
            addCriterion("deleteFlag =", value, "deleteflag");
            return this;
        }

        public Criteria andDeleteflagNotEqualTo(Integer value) {
            addCriterion("deleteFlag <>", value, "deleteflag");
            return this;
        }

        public Criteria andDeleteflagGreaterThan(Integer value) {
            addCriterion("deleteFlag >", value, "deleteflag");
            return this;
        }

        public Criteria andDeleteflagGreaterThanOrEqualTo(Integer value) {
            addCriterion("deleteFlag >=", value, "deleteflag");
            return this;
        }

        public Criteria andDeleteflagLessThan(Integer value) {
            addCriterion("deleteFlag <", value, "deleteflag");
            return this;
        }

        public Criteria andDeleteflagLessThanOrEqualTo(Integer value) {
            addCriterion("deleteFlag <=", value, "deleteflag");
            return this;
        }

        public Criteria andDeleteflagIn(List<Integer> values) {
            addCriterion("deleteFlag in", values, "deleteflag");
            return this;
        }

        public Criteria andDeleteflagNotIn(List<Integer> values) {
            addCriterion("deleteFlag not in", values, "deleteflag");
            return this;
        }

        public Criteria andDeleteflagBetween(Integer value1, Integer value2) {
            addCriterion("deleteFlag between", value1, value2, "deleteflag");
            return this;
        }

        public Criteria andDeleteflagNotBetween(Integer value1, Integer value2) {
            addCriterion("deleteFlag not between", value1, value2, "deleteflag");
            return this;
        }

        public Criteria andUsernameIsNull() {
            addCriterion("userName is null");
            return this;
        }

        public Criteria andUsernameIsNotNull() {
            addCriterion("userName is not null");
            return this;
        }

        public Criteria andUsernameEqualTo(String value) {
            addCriterion("userName =", value, "username");
            return this;
        }

        public Criteria andUsernameNotEqualTo(String value) {
            addCriterion("userName <>", value, "username");
            return this;
        }

        public Criteria andUsernameGreaterThan(String value) {
            addCriterion("userName >", value, "username");
            return this;
        }

        public Criteria andUsernameGreaterThanOrEqualTo(String value) {
            addCriterion("userName >=", value, "username");
            return this;
        }

        public Criteria andUsernameLessThan(String value) {
            addCriterion("userName <", value, "username");
            return this;
        }

        public Criteria andUsernameLessThanOrEqualTo(String value) {
            addCriterion("userName <=", value, "username");
            return this;
        }

        public Criteria andUsernameLike(String value) {
            addCriterion("userName like", value, "username");
            return this;
        }

        public Criteria andUsernameNotLike(String value) {
            addCriterion("userName not like", value, "username");
            return this;
        }

        public Criteria andUsernameIn(List<String> values) {
            addCriterion("userName in", values, "username");
            return this;
        }

        public Criteria andUsernameNotIn(List<String> values) {
            addCriterion("userName not in", values, "username");
            return this;
        }

        public Criteria andUsernameBetween(String value1, String value2) {
            addCriterion("userName between", value1, value2, "username");
            return this;
        }

        public Criteria andUsernameNotBetween(String value1, String value2) {
            addCriterion("userName not between", value1, value2, "username");
            return this;
        }

        public Criteria andUsertypeIsNull() {
            addCriterion("userType is null");
            return this;
        }

        public Criteria andUsertypeIsNotNull() {
            addCriterion("userType is not null");
            return this;
        }

        public Criteria andUsertypeEqualTo(Integer value) {
            addCriterion("userType =", value, "usertype");
            return this;
        }

        public Criteria andUsertypeNotEqualTo(Integer value) {
            addCriterion("userType <>", value, "usertype");
            return this;
        }

        public Criteria andUsertypeGreaterThan(Integer value) {
            addCriterion("userType >", value, "usertype");
            return this;
        }

        public Criteria andUsertypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("userType >=", value, "usertype");
            return this;
        }

        public Criteria andUsertypeLessThan(Integer value) {
            addCriterion("userType <", value, "usertype");
            return this;
        }

        public Criteria andUsertypeLessThanOrEqualTo(Integer value) {
            addCriterion("userType <=", value, "usertype");
            return this;
        }

        public Criteria andUsertypeIn(List<Integer> values) {
            addCriterion("userType in", values, "usertype");
            return this;
        }

        public Criteria andUsertypeNotIn(List<Integer> values) {
            addCriterion("userType not in", values, "usertype");
            return this;
        }

        public Criteria andUsertypeBetween(Integer value1, Integer value2) {
            addCriterion("userType between", value1, value2, "usertype");
            return this;
        }

        public Criteria andUsertypeNotBetween(Integer value1, Integer value2) {
            addCriterion("userType not between", value1, value2, "usertype");
            return this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("status in", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("status not in", values, "status");
            return this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return this;
        }
    }
}