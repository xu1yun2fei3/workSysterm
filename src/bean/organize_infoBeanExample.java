package bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class organize_infoBeanExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table organize_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table organize_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table organize_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    public organize_infoBeanExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table organize_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    protected organize_infoBeanExample(organize_infoBeanExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table organize_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table organize_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table organize_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table organize_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table organize_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table organize_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table organize_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table organize_info
     *
     * @ibatorgenerated Mon Feb 25 18:31:15 CST 2019
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("Id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("Id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("Id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("Id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("Id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("Id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("Id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("Id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("Id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("Id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("Id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("Id not between", value1, value2, "id");
            return this;
        }

        public Criteria andOrgnameIsNull() {
            addCriterion("orgName is null");
            return this;
        }

        public Criteria andOrgnameIsNotNull() {
            addCriterion("orgName is not null");
            return this;
        }

        public Criteria andOrgnameEqualTo(String value) {
            addCriterion("orgName =", value, "orgname");
            return this;
        }

        public Criteria andOrgnameNotEqualTo(String value) {
            addCriterion("orgName <>", value, "orgname");
            return this;
        }

        public Criteria andOrgnameGreaterThan(String value) {
            addCriterion("orgName >", value, "orgname");
            return this;
        }

        public Criteria andOrgnameGreaterThanOrEqualTo(String value) {
            addCriterion("orgName >=", value, "orgname");
            return this;
        }

        public Criteria andOrgnameLessThan(String value) {
            addCriterion("orgName <", value, "orgname");
            return this;
        }

        public Criteria andOrgnameLessThanOrEqualTo(String value) {
            addCriterion("orgName <=", value, "orgname");
            return this;
        }

        public Criteria andOrgnameLike(String value) {
            addCriterion("orgName like", value, "orgname");
            return this;
        }

        public Criteria andOrgnameNotLike(String value) {
            addCriterion("orgName not like", value, "orgname");
            return this;
        }

        public Criteria andOrgnameIn(List<String> values) {
            addCriterion("orgName in", values, "orgname");
            return this;
        }

        public Criteria andOrgnameNotIn(List<String> values) {
            addCriterion("orgName not in", values, "orgname");
            return this;
        }

        public Criteria andOrgnameBetween(String value1, String value2) {
            addCriterion("orgName between", value1, value2, "orgname");
            return this;
        }

        public Criteria andOrgnameNotBetween(String value1, String value2) {
            addCriterion("orgName not between", value1, value2, "orgname");
            return this;
        }

        public Criteria andFidIsNull() {
            addCriterion("fID is null");
            return this;
        }

        public Criteria andFidIsNotNull() {
            addCriterion("fID is not null");
            return this;
        }

        public Criteria andFidEqualTo(Integer value) {
            addCriterion("fID =", value, "fid");
            return this;
        }

        public Criteria andFidNotEqualTo(Integer value) {
            addCriterion("fID <>", value, "fid");
            return this;
        }

        public Criteria andFidGreaterThan(Integer value) {
            addCriterion("fID >", value, "fid");
            return this;
        }

        public Criteria andFidGreaterThanOrEqualTo(Integer value) {
            addCriterion("fID >=", value, "fid");
            return this;
        }

        public Criteria andFidLessThan(Integer value) {
            addCriterion("fID <", value, "fid");
            return this;
        }

        public Criteria andFidLessThanOrEqualTo(Integer value) {
            addCriterion("fID <=", value, "fid");
            return this;
        }

        public Criteria andFidIn(List<Integer> values) {
            addCriterion("fID in", values, "fid");
            return this;
        }

        public Criteria andFidNotIn(List<Integer> values) {
            addCriterion("fID not in", values, "fid");
            return this;
        }

        public Criteria andFidBetween(Integer value1, Integer value2) {
            addCriterion("fID between", value1, value2, "fid");
            return this;
        }

        public Criteria andFidNotBetween(Integer value1, Integer value2) {
            addCriterion("fID not between", value1, value2, "fid");
            return this;
        }

        public Criteria andAuthorizenumIsNull() {
            addCriterion("authorizeNum is null");
            return this;
        }

        public Criteria andAuthorizenumIsNotNull() {
            addCriterion("authorizeNum is not null");
            return this;
        }

        public Criteria andAuthorizenumEqualTo(Integer value) {
            addCriterion("authorizeNum =", value, "authorizenum");
            return this;
        }

        public Criteria andAuthorizenumNotEqualTo(Integer value) {
            addCriterion("authorizeNum <>", value, "authorizenum");
            return this;
        }

        public Criteria andAuthorizenumGreaterThan(Integer value) {
            addCriterion("authorizeNum >", value, "authorizenum");
            return this;
        }

        public Criteria andAuthorizenumGreaterThanOrEqualTo(Integer value) {
            addCriterion("authorizeNum >=", value, "authorizenum");
            return this;
        }

        public Criteria andAuthorizenumLessThan(Integer value) {
            addCriterion("authorizeNum <", value, "authorizenum");
            return this;
        }

        public Criteria andAuthorizenumLessThanOrEqualTo(Integer value) {
            addCriterion("authorizeNum <=", value, "authorizenum");
            return this;
        }

        public Criteria andAuthorizenumIn(List<Integer> values) {
            addCriterion("authorizeNum in", values, "authorizenum");
            return this;
        }

        public Criteria andAuthorizenumNotIn(List<Integer> values) {
            addCriterion("authorizeNum not in", values, "authorizenum");
            return this;
        }

        public Criteria andAuthorizenumBetween(Integer value1, Integer value2) {
            addCriterion("authorizeNum between", value1, value2, "authorizenum");
            return this;
        }

        public Criteria andAuthorizenumNotBetween(Integer value1, Integer value2) {
            addCriterion("authorizeNum not between", value1, value2, "authorizenum");
            return this;
        }

        public Criteria andStarttimeIsNull() {
            addCriterion("startTime is null");
            return this;
        }

        public Criteria andStarttimeIsNotNull() {
            addCriterion("startTime is not null");
            return this;
        }

        public Criteria andStarttimeEqualTo(String value) {
            addCriterion("startTime =", value, "starttime");
            return this;
        }

        public Criteria andStarttimeNotEqualTo(String value) {
            addCriterion("startTime <>", value, "starttime");
            return this;
        }

        public Criteria andStarttimeGreaterThan(String value) {
            addCriterion("startTime >", value, "starttime");
            return this;
        }

        public Criteria andStarttimeGreaterThanOrEqualTo(String value) {
            addCriterion("startTime >=", value, "starttime");
            return this;
        }

        public Criteria andStarttimeLessThan(String value) {
            addCriterion("startTime <", value, "starttime");
            return this;
        }

        public Criteria andStarttimeLessThanOrEqualTo(String value) {
            addCriterion("startTime <=", value, "starttime");
            return this;
        }

        public Criteria andStarttimeLike(String value) {
            addCriterion("startTime like", value, "starttime");
            return this;
        }

        public Criteria andStarttimeNotLike(String value) {
            addCriterion("startTime not like", value, "starttime");
            return this;
        }

        public Criteria andStarttimeIn(List<String> values) {
            addCriterion("startTime in", values, "starttime");
            return this;
        }

        public Criteria andStarttimeNotIn(List<String> values) {
            addCriterion("startTime not in", values, "starttime");
            return this;
        }

        public Criteria andStarttimeBetween(String value1, String value2) {
            addCriterion("startTime between", value1, value2, "starttime");
            return this;
        }

        public Criteria andStarttimeNotBetween(String value1, String value2) {
            addCriterion("startTime not between", value1, value2, "starttime");
            return this;
        }

        public Criteria andEndtimeIsNull() {
            addCriterion("endTime is null");
            return this;
        }

        public Criteria andEndtimeIsNotNull() {
            addCriterion("endTime is not null");
            return this;
        }

        public Criteria andEndtimeEqualTo(Date value) {
            addCriterion("endTime =", value, "endtime");
            return this;
        }

        public Criteria andEndtimeNotEqualTo(Date value) {
            addCriterion("endTime <>", value, "endtime");
            return this;
        }

        public Criteria andEndtimeGreaterThan(Date value) {
            addCriterion("endTime >", value, "endtime");
            return this;
        }

        public Criteria andEndtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("endTime >=", value, "endtime");
            return this;
        }

        public Criteria andEndtimeLessThan(Date value) {
            addCriterion("endTime <", value, "endtime");
            return this;
        }

        public Criteria andEndtimeLessThanOrEqualTo(Date value) {
            addCriterion("endTime <=", value, "endtime");
            return this;
        }

        public Criteria andEndtimeIn(List<Date> values) {
            addCriterion("endTime in", values, "endtime");
            return this;
        }

        public Criteria andEndtimeNotIn(List<Date> values) {
            addCriterion("endTime not in", values, "endtime");
            return this;
        }

        public Criteria andEndtimeBetween(Date value1, Date value2) {
            addCriterion("endTime between", value1, value2, "endtime");
            return this;
        }

        public Criteria andEndtimeNotBetween(Date value1, Date value2) {
            addCriterion("endTime not between", value1, value2, "endtime");
            return this;
        }

        public Criteria andOrgmanagerIsNull() {
            addCriterion("orgManager is null");
            return this;
        }

        public Criteria andOrgmanagerIsNotNull() {
            addCriterion("orgManager is not null");
            return this;
        }

        public Criteria andOrgmanagerEqualTo(Integer value) {
            addCriterion("orgManager =", value, "orgmanager");
            return this;
        }

        public Criteria andOrgmanagerNotEqualTo(Integer value) {
            addCriterion("orgManager <>", value, "orgmanager");
            return this;
        }

        public Criteria andOrgmanagerGreaterThan(Integer value) {
            addCriterion("orgManager >", value, "orgmanager");
            return this;
        }

        public Criteria andOrgmanagerGreaterThanOrEqualTo(Integer value) {
            addCriterion("orgManager >=", value, "orgmanager");
            return this;
        }

        public Criteria andOrgmanagerLessThan(Integer value) {
            addCriterion("orgManager <", value, "orgmanager");
            return this;
        }

        public Criteria andOrgmanagerLessThanOrEqualTo(Integer value) {
            addCriterion("orgManager <=", value, "orgmanager");
            return this;
        }

        public Criteria andOrgmanagerIn(List<Integer> values) {
            addCriterion("orgManager in", values, "orgmanager");
            return this;
        }

        public Criteria andOrgmanagerNotIn(List<Integer> values) {
            addCriterion("orgManager not in", values, "orgmanager");
            return this;
        }

        public Criteria andOrgmanagerBetween(Integer value1, Integer value2) {
            addCriterion("orgManager between", value1, value2, "orgmanager");
            return this;
        }

        public Criteria andOrgmanagerNotBetween(Integer value1, Integer value2) {
            addCriterion("orgManager not between", value1, value2, "orgmanager");
            return this;
        }

        public Criteria andDetailIsNull() {
            addCriterion("detail is null");
            return this;
        }

        public Criteria andDetailIsNotNull() {
            addCriterion("detail is not null");
            return this;
        }

        public Criteria andDetailEqualTo(String value) {
            addCriterion("detail =", value, "detail");
            return this;
        }

        public Criteria andDetailNotEqualTo(String value) {
            addCriterion("detail <>", value, "detail");
            return this;
        }

        public Criteria andDetailGreaterThan(String value) {
            addCriterion("detail >", value, "detail");
            return this;
        }

        public Criteria andDetailGreaterThanOrEqualTo(String value) {
            addCriterion("detail >=", value, "detail");
            return this;
        }

        public Criteria andDetailLessThan(String value) {
            addCriterion("detail <", value, "detail");
            return this;
        }

        public Criteria andDetailLessThanOrEqualTo(String value) {
            addCriterion("detail <=", value, "detail");
            return this;
        }

        public Criteria andDetailLike(String value) {
            addCriterion("detail like", value, "detail");
            return this;
        }

        public Criteria andDetailNotLike(String value) {
            addCriterion("detail not like", value, "detail");
            return this;
        }

        public Criteria andDetailIn(List<String> values) {
            addCriterion("detail in", values, "detail");
            return this;
        }

        public Criteria andDetailNotIn(List<String> values) {
            addCriterion("detail not in", values, "detail");
            return this;
        }

        public Criteria andDetailBetween(String value1, String value2) {
            addCriterion("detail between", value1, value2, "detail");
            return this;
        }

        public Criteria andDetailNotBetween(String value1, String value2) {
            addCriterion("detail not between", value1, value2, "detail");
            return this;
        }

        public Criteria andDeleteflagIsNull() {
            addCriterion("deleteFlag is null");
            return this;
        }

        public Criteria andDeleteflagIsNotNull() {
            addCriterion("deleteFlag is not null");
            return this;
        }

        public Criteria andDeleteflagEqualTo(Integer value) {
            addCriterion("deleteFlag =", value, "deleteflag");
            return this;
        }

        public Criteria andDeleteflagNotEqualTo(Integer value) {
            addCriterion("deleteFlag <>", value, "deleteflag");
            return this;
        }

        public Criteria andDeleteflagGreaterThan(Integer value) {
            addCriterion("deleteFlag >", value, "deleteflag");
            return this;
        }

        public Criteria andDeleteflagGreaterThanOrEqualTo(Integer value) {
            addCriterion("deleteFlag >=", value, "deleteflag");
            return this;
        }

        public Criteria andDeleteflagLessThan(Integer value) {
            addCriterion("deleteFlag <", value, "deleteflag");
            return this;
        }

        public Criteria andDeleteflagLessThanOrEqualTo(Integer value) {
            addCriterion("deleteFlag <=", value, "deleteflag");
            return this;
        }

        public Criteria andDeleteflagIn(List<Integer> values) {
            addCriterion("deleteFlag in", values, "deleteflag");
            return this;
        }

        public Criteria andDeleteflagNotIn(List<Integer> values) {
            addCriterion("deleteFlag not in", values, "deleteflag");
            return this;
        }

        public Criteria andDeleteflagBetween(Integer value1, Integer value2) {
            addCriterion("deleteFlag between", value1, value2, "deleteflag");
            return this;
        }

        public Criteria andDeleteflagNotBetween(Integer value1, Integer value2) {
            addCriterion("deleteFlag not between", value1, value2, "deleteflag");
            return this;
        }

        public Criteria andFnameIsNull() {
            addCriterion("fName is null");
            return this;
        }

        public Criteria andFnameIsNotNull() {
            addCriterion("fName is not null");
            return this;
        }

        public Criteria andFnameEqualTo(String value) {
            addCriterion("fName =", value, "fname");
            return this;
        }

        public Criteria andFnameNotEqualTo(String value) {
            addCriterion("fName <>", value, "fname");
            return this;
        }

        public Criteria andFnameGreaterThan(String value) {
            addCriterion("fName >", value, "fname");
            return this;
        }

        public Criteria andFnameGreaterThanOrEqualTo(String value) {
            addCriterion("fName >=", value, "fname");
            return this;
        }

        public Criteria andFnameLessThan(String value) {
            addCriterion("fName <", value, "fname");
            return this;
        }

        public Criteria andFnameLessThanOrEqualTo(String value) {
            addCriterion("fName <=", value, "fname");
            return this;
        }

        public Criteria andFnameLike(String value) {
            addCriterion("fName like", value, "fname");
            return this;
        }

        public Criteria andFnameNotLike(String value) {
            addCriterion("fName not like", value, "fname");
            return this;
        }

        public Criteria andFnameIn(List<String> values) {
            addCriterion("fName in", values, "fname");
            return this;
        }

        public Criteria andFnameNotIn(List<String> values) {
            addCriterion("fName not in", values, "fname");
            return this;
        }

        public Criteria andFnameBetween(String value1, String value2) {
            addCriterion("fName between", value1, value2, "fname");
            return this;
        }

        public Criteria andFnameNotBetween(String value1, String value2) {
            addCriterion("fName not between", value1, value2, "fname");
            return this;
        }
    }
}